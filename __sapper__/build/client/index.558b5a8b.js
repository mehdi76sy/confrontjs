function t(){}function n(t,n){for(const e in n)t[e]=n[e];return t}function e(t){return t()}function o(){return Object.create(null)}function r(t){t.forEach(e)}function c(t){return"function"==typeof t}function u(t,n){return t!=t?n==n:t!==n||t&&"object"==typeof t||"function"==typeof t}function s(t,n,e){if(t){const o=a(t,n,e);return t[0](o)}}function a(t,e,o){return t[1]?n({},n(e.$$scope.ctx,t[1](o?o(e):{}))):e.$$scope.ctx}function i(t,e,o,r){return t[1]?n({},n(e.$$scope.changed||{},t[1](r?r(o):{}))):e.$$scope.changed||{}}function f(t){return null==t?"":t}function l(t,n){t.appendChild(n)}function d(t,n,e){t.insertBefore(n,e||null)}function $(t){t.parentNode.removeChild(t)}function p(t,n){for(let e=0;e<t.length;e+=1)t[e]&&t[e].d(n)}function h(t){return document.createElement(t)}function m(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function g(t){return document.createTextNode(t)}function y(){return g(" ")}function b(){return g("")}function w(t,n,e,o){return t.addEventListener(n,e,o),()=>t.removeEventListener(n,e,o)}function x(t,n,e){null==e?t.removeAttribute(n):t.setAttribute(n,e)}function _(t,n,e){t.setAttributeNS("http://www.w3.org/1999/xlink",n,e)}function v(t){return Array.from(t.childNodes)}function E(t,n,e,o){for(let o=0;o<t.length;o+=1){const r=t[o];if(r.nodeName===n){for(let t=0;t<r.attributes.length;t+=1){const n=r.attributes[t];e[n.name]||r.removeAttribute(n.name)}return t.splice(o,1)[0]}}return o?m(n):h(n)}function A(t,n){for(let e=0;e<t.length;e+=1){const o=t[e];if(3===o.nodeType)return o.data=n,t.splice(e,1)[0]}return g(n)}function N(t,n){n=""+n,t.data!==n&&(t.data=n)}function k(t,n,e){t.style.setProperty(n,e)}let S;function j(t){S=t}function C(){if(!S)throw new Error("Function called outside component initialization");return S}function q(t){C().$$.on_mount.push(t)}function z(t,n){C().$$.context.set(t,n)}const B=[],F=[],L=[],O=[],P=Promise.resolve();let T=!1;function D(t){L.push(t)}function G(){const t=new Set;do{for(;B.length;){const t=B.shift();j(t),H(t.$$)}for(;F.length;)F.pop()();for(let n=0;n<L.length;n+=1){const e=L[n];t.has(e)||(e(),t.add(e))}L.length=0}while(B.length);for(;O.length;)O.pop()();T=!1}function H(t){t.fragment&&(t.update(t.dirty),r(t.before_update),t.fragment.p(t.dirty,t.ctx),t.dirty=null,t.after_update.forEach(D))}const I=new Set;let J;function M(){J={r:0,c:[],p:J}}function K(){J.r||r(J.c),J=J.p}function Q(t,n){t&&t.i&&(I.delete(t),t.i(n))}function R(t,n,e,o){if(t&&t.o){if(I.has(t))return;I.add(t),J.c.push(()=>{I.delete(t),o&&(e&&t.d(1),o())}),t.o(n)}}const U="undefined"!=typeof window?window:global;function V(t,n){const e={},o={},r={$$scope:1};let c=t.length;for(;c--;){const u=t[c],s=n[c];if(s){for(const t in u)t in s||(o[t]=1);for(const t in s)r[t]||(e[t]=s[t],r[t]=1);t[c]=s}else for(const t in u)r[t]=1}for(const t in o)t in e||(e[t]=void 0);return e}function W(t,n,o){const{fragment:u,on_mount:s,on_destroy:a,after_update:i}=t.$$;u.m(n,o),D(()=>{const n=s.map(e).filter(c);a?a.push(...n):r(n),t.$$.on_mount=[]}),i.forEach(D)}function X(t,n){t.$$.fragment&&(r(t.$$.on_destroy),t.$$.fragment.d(n),t.$$.on_destroy=t.$$.fragment=null,t.$$.ctx={})}function Y(t,n){t.$$.dirty||(B.push(t),T||(T=!0,P.then(G)),t.$$.dirty=o()),t.$$.dirty[n]=!0}function Z(n,e,c,u,s,a){const i=S;j(n);const f=e.props||{},l=n.$$={fragment:null,ctx:null,props:a,update:t,not_equal:s,bound:o(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:o(),dirty:null};let d=!1;l.ctx=c?c(n,f,(t,e)=>{l.ctx&&s(l.ctx[t],l.ctx[t]=e)&&(l.bound[t]&&l.bound[t](e),d&&Y(n,t))}):f,l.update(),d=!0,r(l.before_update),l.fragment=u(l.ctx),e.target&&(e.hydrate?l.fragment.l(v(e.target)):l.fragment.c(),e.intro&&Q(n.$$.fragment),W(n,e.target,e.anchor),G()),j(i)}class tt{$destroy(){X(this,1),this.$destroy=t}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(){}}export{N as A,n as B,V as C,z as D,b as E,M as F,K as G,p as H,q as I,F as J,tt as S,v as a,x as b,E as c,$ as d,h as e,k as f,d as g,l as h,Z as i,m as j,y as k,A as l,f as m,t as n,W as o,Q as p,R as q,X as r,u as s,g as t,s as u,w as v,i as w,_ as x,a as y,U as z};
